CountsViewPane.detailSwitchMessage=秒よりも小さい時間分解能はありません。\n代わりに詳細ビューに切り替えますか?
CountsViewPane.detailSwitchTitle=詳細ビューに切り替えますか?
CountsViewPane.linearRadio.text=線形
CountsViewPane.loggedTask.name=カウントビューの更新中です
CountsViewPane.loggedTask.updatingCounts=ビューの入力中です
CountsViewPane.logRadio.text=対数
# {0} - 目盛名
CountsViewPane.numberOfEvents=イベント数 ({0})
CountsViewPane.scaleHelp.label.text=目盛:   
CountsViewPane.scaleHelpLinear=線形目盛は多くの使用事例に適しています。  この目盛を選択すると、バーの高さが1対1の線形でカウントを表し、y軸に値ラベルが付きます。値の範囲が非常に大きいと、カウントの少ない時間周期に小さすぎて表示できないバーがあることがあります。  ユーザーがこれを判別できるように、イベントのあるデータ範囲のラベルが太字で表示されます。  小さすぎるバーを表示する選択肢は次の3つです:  タイムラインの縦領域を広げるためにウィンドウサイズを調整、より大きいバーのある時間周期が除外されるよう時間範囲を調整、もしくは目盛設定を対数に調整
CountsViewPane.scaleHelpLog=対数目盛は、大きい数字と小さい数字の差を圧縮する非線形な方法でイベント数を表します。対数目盛を用いても、極端に大きいカウント差によって小さすぎて表示できないバーが生成されることがあります。  この場合、イベントをフィルターしてカウント差を縮めることが唯一の選択肢である可能性があります。  注: 対数目盛はイベントタイプごとに個別に適用されるため、複合バーの高さの意味は直感的ではありません。また、これを強調するために、対数目盛を用いたy軸上にラベルを表示しません。対数目盛は、1つのタイプ内の時間全域、または1つの時間周期のタイプ全域で 
CountsViewPane.scaleHelpLog2=カウントを迅速に比較するために使用する必要があります。ただし両方一度に使用できません。
CountsViewPane.scaleHelpLog3=\ 実際のカウント(ツールチップまたは結果ビューで利用可能)は絶対比較に使用する必要があります。  慎重に対数目盛を使用してください。
CountsViewPane.scaleLabel.text=目盛:
# {0} - カウント
# {1} - イベントタイプの表示名
# {2} - 開始日時
# {3} - 終了日時
CountsViewPane.tooltip.text={2}\nと   {3}\n間の {0} {1} イベント
ScaleType.Linear=線形
ScaleType.Logarithmic=対数
Timeline.ui.countsview.menuItem.selectEventType=イベントタイプを選択
Timeline.ui.countsview.menuItem.selectTimeandType=時間とタイプを選択
Timeline.ui.countsview.menuItem.selectTimeRange=時間範囲を選択
Timeline.ui.countsview.menuItem.zoomIntoTimeRange=時間範囲にズームイン
